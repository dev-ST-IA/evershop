type RewardRound {
  roundId: ID!
  uuid: String!
  category: RewardCategory!
  roundStatus: String!
  roundStartDateTime: String!
  roundEndDateTime: String
  currentCompletedQuantity: Int
  categoryLimit: Int!
  winner: Customer
  winnerSelectionDateTime: String
  isOngoing: Boolean
  isCompleted: Boolean
  isWinnerSelected: Boolean
  winnerSelected: RoundStatus
  viewRoundApi: String
  selectWinnerApi: String
  deleteApi: String
  updateApi: String
}

type RoundStatus {
  title: String
  code: String
  badge: String
  progress: String
}

type RewardRoundHistory {
  roundId: ID!
  uuid: String!
  roundHistoryId: ID!
  description: String
  createdAt: DateTime
}

type RewardRoundCollection {
  items: [RewardRound]
  currentPage: Int!
  total: Int!
  currentFilters: [Filter]
}

extend type Query {
  rewardRounds(filters: [FilterInput]): RewardRoundCollection
  rewardRoundsCompleted(filters: [FilterInput]): RewardRoundCollection
  rewardRound (id: Int): RewardRound
  rewardRoundHistory (id: Int): [RewardRoundHistory]
  ongoingRewardRoundByCategory (categoryId: Int): RewardRound
}